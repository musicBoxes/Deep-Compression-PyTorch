Not using CUDA!!!
LeNet(
  (fc1): MaskedLinear(in_features=784, out_features=300, bias=True)
  (fc2): MaskedLinear(in_features=300, out_features=100, bias=True)
  (fc3): MaskedLinear(in_features=100, out_features=10, bias=True)
)
Param name           Shape                          Type           
----------------------------------------------------------------------
fc1.weight           torch.Size([300, 784])         torch.float32  
fc1.mask             torch.Size([300, 784])         torch.float32  
fc1.bias             torch.Size([300])              torch.float32  
fc2.weight           torch.Size([100, 300])         torch.float32  
fc2.mask             torch.Size([100, 300])         torch.float32  
fc2.bias             torch.Size([100])              torch.float32  
fc3.weight           torch.Size([10, 100])          torch.float32  
fc3.mask             torch.Size([10, 100])          torch.float32  
fc3.bias             torch.Size([10])               torch.float32  
--- Initial training ---
Test set: Average loss: 0.1848, Accuracy: 9540/10000 (95.40%)
--- Before pruning ---
fc1.weight           | nonzeros =  235200 /  235200 (100.00%) | total_pruned =       0 | shape = (300, 784)
fc1.bias             | nonzeros =     300 /     300 (100.00%) | total_pruned =       0 | shape = (300,)
fc2.weight           | nonzeros =   30000 /   30000 (100.00%) | total_pruned =       0 | shape = (100, 300)
fc2.bias             | nonzeros =     100 /     100 (100.00%) | total_pruned =       0 | shape = (100,)
fc3.weight           | nonzeros =    1000 /    1000 (100.00%) | total_pruned =       0 | shape = (10, 100)
fc3.bias             | nonzeros =      10 /      10 (100.00%) | total_pruned =       0 | shape = (10,)
alive: 266610, pruned : 0, total: 266610, Compression rate :       1.00x  (  0.00% pruned)
Pruning with threshold : 0.23448887467384338 for layer fc1
Pruning with threshold : 0.19349177181720734 for layer fc2
Pruning with threshold : 0.19981266558170319 for layer fc3
Test set: Average loss: 0.8302, Accuracy: 8464/10000 (84.64%)
--- After pruning ---
fc1.weight           | nonzeros =   10641 /  235200 (  4.52%) | total_pruned =  224559 | shape = (300, 784)
fc1.bias             | nonzeros =     300 /     300 (100.00%) | total_pruned =       0 | shape = (300,)
fc2.weight           | nonzeros =    1342 /   30000 (  4.47%) | total_pruned =   28658 | shape = (100, 300)
fc2.bias             | nonzeros =     100 /     100 (100.00%) | total_pruned =       0 | shape = (100,)
fc3.weight           | nonzeros =      82 /    1000 (  8.20%) | total_pruned =     918 | shape = (10, 100)
fc3.bias             | nonzeros =      10 /      10 (100.00%) | total_pruned =       0 | shape = (10,)
alive: 12475, pruned : 254135, total: 266610, Compression rate :      21.37x  ( 95.32% pruned)
--- Retraining ---
Test set: Average loss: 0.1242, Accuracy: 9645/10000 (96.45%)
--- After Retraining ---
fc1.weight           | nonzeros =   10641 /  235200 (  4.52%) | total_pruned =  224559 | shape = (300, 784)
fc1.bias             | nonzeros =     300 /     300 (100.00%) | total_pruned =       0 | shape = (300,)
fc2.weight           | nonzeros =    1342 /   30000 (  4.47%) | total_pruned =   28658 | shape = (100, 300)
fc2.bias             | nonzeros =     100 /     100 (100.00%) | total_pruned =       0 | shape = (100,)
fc3.weight           | nonzeros =      82 /    1000 (  8.20%) | total_pruned =     918 | shape = (10, 100)
fc3.bias             | nonzeros =      10 /      10 (100.00%) | total_pruned =       0 | shape = (10,)
alive: 12475, pruned : 254135, total: 266610, Compression rate :      21.37x  ( 95.32% pruned)
